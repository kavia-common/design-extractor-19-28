{"is_source_file": true, "format": "python", "description": "This script automates extraction of visual assets from a Figma file via the Figma REST API. It fetches nodes and images, saves assets as SVG/PNG files, and generates static HTML, CSS, and JS files to display the exported assets. The script also creates a manifest JSON mapping node IDs to exported filenames.", "external_files": ["requests", "shutil", "pathlib", "sys", "time", "json", "os", "argparse", "urllib.parse"], "external_methods": ["requests.get", "pathlib.Path.mkdir", "os.path.exists", "os.path.join", "sys.stdout", "sys.stderr", "json.dump"], "published": ["safe_name", "ensure_dir", "figma_headers", "get_file", "get_file_nodes", "get_images", "download_binary", "walk_nodes_for_exportables", "guess_best_format_for_node", "unique_name", "extract_assets", "generate_static_site", "main"], "classes": [], "methods": [{"name": "str safe_name(s: str)", "description": "Returns a filesystem-safe filename fragment derived from a string by replacing non-alphanumeric characters with underscores.", "scope": "", "scopeKind": ""}, {"name": "None ensure_dir(path: str)", "description": "Ensures that the specified directory path exists, creating it if necessary.", "scope": "", "scopeKind": ""}, {"name": "dict figma_headers(token: str)", "description": "Constructs HTTP headers with the given Figma API token.", "scope": "", "scopeKind": ""}, {"name": "dict get_file(token: str, file_id: str)", "description": "Fetches the JSON data for the Figma file specified by file ID using the provided token.", "scope": "", "scopeKind": ""}, {"name": "dict get_file_nodes(token: str, file_id: str, node_ids: list[str])", "description": "Fetches specific node data from a Figma file for provided node IDs.", "scope": "", "scopeKind": ""}, {"name": "dict get_images(token: str, file_id: str, node_ids: list[str], fmt: str = \"svg\", scale: float = 1.0)", "description": "Requests image render URLs for specified nodes in a given format (svg/png/jpg/pdf) from Figma.", "scope": "", "scopeKind": ""}, {"name": "None download_binary(url: str, out_path: str, attempts: int = 3, backoff: float = 2.0)", "description": "Downloads a binary file from a URL to a specified output path with retries and backoff.", "scope": "", "scopeKind": ""}, {"name": "None walk_nodes_for_exportables(node: dict, page_id: str | None, collected: list[dict])", "description": "Traverses the node tree recursively to collect nodes suitable for export based on type and page filtering.", "scope": "", "scopeKind": ""}, {"name": "str guess_best_format_for_node(node: dict)", "description": "Guesses the best export format ('svg' for vector-like nodes, 'png' otherwise) for a given node.", "scope": "", "scopeKind": ""}, {"name": "str unique_name(base: str, taken: set[str])", "description": "Generates a unique filename by appending a counter if needed to avoid duplicates.", "scope": "", "scopeKind": ""}, {"name": "dict extract_assets(token: str, file_id: str, page_id: str | None, output_img_dir: str, output_prefix: str, scale: float = 2.0)", "description": "Main function to gather nodes, request images, save assets, and produce a manifest JSON.", "scope": "", "scopeKind": ""}, {"name": "dict generate_static_site(manifest: dict, output_root: str, site_prefix: str)", "description": "Creates a static HTML, CSS, and JS site to display exported assets, with references to their paths.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Parses command-line arguments, reads environment variables, calls extraction, saves manifest, and creates static site.", "scope": "", "scopeKind": ""}], "calls": ["requests.get", "pathlib.Path.mkdir", "os.path.exists", "json.dump"], "search-terms": ["extract_figma_assets", "Figma REST API", "asset extraction", "static site generation", "SVG/PNG assets", "manifest JSON"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "FIGMA_API_BASE", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^FIGMA_API_BASE = \"https:\\/\\/api.figma.com\\/v1\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "download_binary", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def download_binary(url: str, out_path: str, attempts: int = 3, backoff: float = 2.0) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(url: str, out_path: str, attempts: int = 3, backoff: float = 2.0)"}, {"_type": "tag", "name": "ensure_dir", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def ensure_dir(path: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(path: str)"}, {"_type": "tag", "name": "extract_assets", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def extract_assets(token: str, file_id: str, page_id: str | None, output_img_dir: str, output_pr/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str, file_id: str, page_id: str | None, output_img_dir: str, output_prefix: str, scale: float = 2.0)"}, {"_type": "tag", "name": "figma_headers", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def figma_headers(token: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "generate_static_site", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def generate_static_site(manifest: dict, output_root: str, site_prefix: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(manifest: dict, output_root: str, site_prefix: str)"}, {"_type": "tag", "name": "get_file", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def get_file(token: str, file_id: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str, file_id: str)"}, {"_type": "tag", "name": "get_file_nodes", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def get_file_nodes(token: str, file_id: str, node_ids: list[str]) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str, file_id: str, node_ids: list[str])"}, {"_type": "tag", "name": "get_images", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def get_images(token: str, file_id: str, node_ids: list[str], fmt: str = \"svg\", scale: float = 1/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str, file_id: str, node_ids: list[str], fmt: str = \"svg\", scale: float = 1.0)"}, {"_type": "tag", "name": "guess_best_format_for_node", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def guess_best_format_for_node(node: dict) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(node: dict)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "safe_name", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def safe_name(s: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(s: str)"}, {"_type": "tag", "name": "unique_name", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def unique_name(base: str, taken: set[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(base: str, taken: set[str])"}, {"_type": "tag", "name": "walk_nodes_for_exportables", "path": "/home/kavia/workspace/code-generation/design-extractor-19-28/react_frontend/scripts/extract_figma_assets.py", "pattern": "/^def walk_nodes_for_exportables(node: dict, page_id: str | None, collected: list[dict]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(node: dict, page_id: str | None, collected: list[dict])"}], "hash": "90a831e7eb56969a299f95c5fdf62796", "format-version": 4, "code-base-name": "react_frontend", "filename": "react_frontend/scripts/extract_figma_assets.py", "fields": [{"name": "FIGMA_API_BASE = \"https:\\/\\/api.figma.com\\/v1\"", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}